import React from 'react';
import { ScrollView, StyleSheet, Text, TouchableOpacity, View } from 'react-native';

export default function TrustIRSDashboardScreen() {
  // IRS Score Data
  const irsScore = 53;
  const maxIrsScore = 100;
  const irsPercentage = (irsScore / maxIrsScore) * 100;
  
  // Trust Score Data  
  const trustScore = 200;
  const trustLevel = 3;
  const trustPercentage = 75; // Overall trust percentage
  
  // Score Breakdown - ‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏≤‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô IRS
  const scoreBreakdown = [
    { category: '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏°‡πà‡∏≥‡πÄ‡∏™‡∏°‡∏≠‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î', points: 25, maxPoints: 30, source: '‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô' },
    { category: '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ô‡πà‡∏≤‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏ñ‡∏∑‡∏≠‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•', points: 15, maxPoints: 25, source: '‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÅ‡∏û‡∏•‡∏ï‡∏ü‡∏≠‡∏£‡πå‡∏°' },
    { category: '‡∏ß‡∏¥‡∏ô‡∏±‡∏¢‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô', points: 18, maxPoints: 25, source: '‡∏´‡∏•‡∏±‡∏Å‡∏ê‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞' },
    { category: '‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ï‡∏±‡∏ß‡∏ï‡∏ô', points: 10, maxPoints: 20, source: '‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö' },
    { category: '‡∏õ‡∏±‡∏à‡∏à‡∏±‡∏¢‡∏•‡∏ö', points: -15, maxPoints: 0, source: '‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡∏≤‡∏î‡∏´‡∏≤‡∏¢, ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á' },
  ];

  const achievements = [
    { title: '‡∏ú‡∏π‡πâ‡∏Å‡∏π‡πâ‡∏ï‡∏£‡∏á‡πÄ‡∏ß‡∏•‡∏≤', desc: '‡∏ä‡∏≥‡∏£‡∏∞‡∏ï‡∏£‡∏á‡πÄ‡∏ß‡∏•‡∏≤ 3 ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô', icon: 'üèÜ', earned: true, points: '+15' },
    { title: '‡∏ô‡∏±‡∏Å‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•', desc: '‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ 30 ‡∏ß‡∏±‡∏ô', icon: 'üìä', earned: true, points: '+10' },
    { title: '‡∏ú‡∏π‡πâ‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏Å‡∏≤‡∏£', desc: '‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à', icon: 'üè™', earned: false, points: '+20' },
  ];

  const activities = [
    { date: '11 ‡∏°‡∏¥.‡∏¢.', action: '‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ', status: '‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß', points: 5, impact: 'irs' },
    { date: '10 ‡∏°‡∏¥.‡∏¢.', action: '‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•', status: '‡∏Ç‡∏≤‡∏î‡∏´‡∏≤‡∏¢', points: -2, impact: 'irs' },
    { date: '9 ‡∏°‡∏¥.‡∏¢.', action: '‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÅ‡∏û‡∏•‡∏ï‡∏ü‡∏≠‡∏£‡πå‡∏°', status: 'GRAB ‚úì', points: 10, impact: 'trust' },
    { date: '8 ‡∏°‡∏¥.‡∏¢.', action: '‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏•‡∏±‡∏Å‡∏ê‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô', status: '‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß', points: 8, impact: 'both' },
  ];

  const getScoreLevel = (score) => {
    if (score >= 80) return { label: '‡∏î‡∏µ‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏°', color: '#4CAF50', bg: '#e8f5e8' };
    if (score >= 60) return { label: '‡∏î‡∏µ', color: '#FF9800', bg: '#fff3e0' };
    if (score >= 40) return { label: '‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á', color: '#ff6600', bg: '#fff5f0' };
    return { label: '‡∏ï‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á', color: '#f44336', bg: '#ffebee' };
  };

  const irsLevel = getScoreLevel(irsScore);
  const trustScoreLevel = getScoreLevel(trustPercentage);

  return (
    <View style={styles.container}>
      {/* Header */}
      <View style={styles.headerSection}>
        <Text style={styles.header}>‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ô‡πà‡∏≤‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏ñ‡∏∑‡∏≠ & IRS</Text>
        <Text style={styles.subtitle}>‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡πÅ‡∏•‡∏∞‡∏õ‡∏±‡∏à‡∏à‡∏±‡∏¢‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏ú‡∏•‡∏ï‡πà‡∏≠‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô</Text>
      </View>

      <ScrollView style={styles.scrollView} showsVerticalScrollIndicator={false}>
        {/* Combined Score Overview */}
        <View style={styles.overviewCard}>
          <Text style={styles.overviewTitle}>‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì</Text>
          
          <View style={styles.scoresContainer}>
            {/* Trust Score */}
            <View style={styles.scoreItem}>
              <View style={styles.scoreHeader}>
                <Text style={styles.scoreLabel}>Trust Score</Text>
                <View style={[styles.levelBadge, { backgroundColor: trustScoreLevel.bg }]}>
                  <Text style={[styles.levelText, { color: trustScoreLevel.color }]}>
                    {trustScoreLevel.label}
                  </Text>
                </View>
              </View>
              <Text style={styles.mainScore}>{trustScore}</Text>
              <Text style={styles.scoreSubtext}>‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏™‡∏∞‡∏™‡∏°</Text>
              <View style={styles.progressContainer}>
                <View style={styles.progressBar}>
                  <View style={[
                    styles.progressFill, 
                    { width: `${trustPercentage}%`, backgroundColor: trustScoreLevel.color }
                  ]} />
                </View>
                <Text style={styles.progressText}>{trustPercentage}%</Text>
              </View>
            </View>

            {/* IRS Score */}
            <View style={styles.scoreItem}>
              <View style={styles.scoreHeader}>
                <Text style={styles.scoreLabel}>IRS Score</Text>
                <View style={[styles.levelBadge, { backgroundColor: irsLevel.bg }]}>
                  <Text style={[styles.levelText, { color: irsLevel.color }]}>
                    {irsLevel.label}
                  </Text>
                </View>
              </View>
              <Text style={styles.mainScore}>{irsScore}</Text>
              <Text style={styles.scoreSubtext}>‡∏à‡∏≤‡∏Å {maxIrsScore} ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô</Text>
              <View style={styles.progressContainer}>
                <View style={styles.progressBar}>
                  <View style={[
                    styles.progressFill, 
                    { width: `${irsPercentage}%`, backgroundColor: irsLevel.color }
                  ]} />
                </View>
                <Text style={styles.progressText}>{Math.round(irsPercentage)}%</Text>
              </View>
            </View>
          </View>

          <View style={styles.relationshipInfo}>
            <Text style={styles.relationshipTitle}>üí° ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô</Text>
            <Text style={styles.relationshipText}>
              ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô IRS ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏à‡∏≤‡∏Å‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏°‡πà‡∏≥‡πÄ‡∏™‡∏°‡∏≠‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ô‡πà‡∏≤‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏ñ‡∏∑‡∏≠‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ 
              ‡∏ã‡∏∂‡πà‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏´‡∏ô‡∏∂‡πà‡∏á‡∏Ç‡∏≠‡∏á Trust Score ‡∏£‡∏ß‡∏°
            </Text>
          </View>
        </View>

        {/* Score Breakdown - ‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏≤‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô */}
        <View style={styles.card}>
          <Text style={styles.cardTitle}>‡∏ó‡∏µ‡πà‡∏°‡∏≤‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô IRS</Text>
          <Text style={styles.cardSubtitle}>‡πÅ‡∏ö‡πà‡∏á‡∏ï‡∏≤‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÅ‡∏•‡∏∞‡πÅ‡∏´‡∏•‡πà‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏≤</Text>
          
          {scoreBreakdown.map((item, index) => (
            <View key={index} style={styles.breakdownItem}>
              <View style={styles.breakdownLeft}>
                <Text style={styles.breakdownCategory}>{item.category}</Text>
                <Text style={styles.breakdownSource}>‡∏à‡∏≤‡∏Å: {item.source}</Text>
              </View>
              <View style={styles.breakdownRight}>
                <Text style={[
                  styles.breakdownPoints,
                  { color: item.points > 0 ? '#4CAF50' : '#f44336' }
                ]}>
                  {item.points > 0 ? '+' : ''}{item.points}
                </Text>
                <Text style={styles.breakdownMax}>/{item.maxPoints > 0 ? item.maxPoints : '0'}</Text>
              </View>
            </View>
          ))}
          
          <View style={styles.totalRow}>
            <Text style={styles.totalLabel}>‡∏£‡∏ß‡∏°‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô IRS</Text>
            <Text style={styles.totalValue}>{irsScore}/{maxIrsScore}</Text>
          </View>
        </View>

        {/* Statistics Cards */}
        <View style={styles.statsContainer}>
          <View style={styles.statCard}>
            <Text style={styles.statNumber}>15</Text>
            <Text style={styles.statLabel}>‡∏ß‡∏±‡∏ô‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ô</Text>
          </View>
          <View style={styles.statCard}>
            <Text style={styles.statNumber}>85%</Text>
            <Text style={styles.statLabel}>‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</Text>
          </View>
          <View style={styles.statCard}>
            <Text style={styles.statNumber}>3</Text>
            <Text style={styles.statLabel}>‡πÅ‡∏û‡∏•‡∏ï‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠</Text>
          </View>
        </View>

        {/* Achievements */}
        <View style={styles.card}>
          <Text style={styles.cardTitle}>‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à</Text>
          {achievements.map((achievement, index) => (
            <View key={index} style={styles.achievementItem}>
              <View style={[
                styles.achievementIcon,
                achievement.earned ? styles.achievementEarned : styles.achievementLocked
              ]}>
                <Text style={styles.achievementEmoji}>
                  {achievement.earned ? achievement.icon : 'üîí'}
                </Text>
              </View>
              <View style={styles.achievementContent}>
                <Text style={[
                  styles.achievementTitle,
                  !achievement.earned && styles.achievementTitleLocked
                ]}>
                  {achievement.title}
                </Text>
                <Text style={styles.achievementDesc}>{achievement.desc}</Text>
              </View>
              <View style={styles.achievementPoints}>
                <Text style={styles.pointsText}>{achievement.points}</Text>
              </View>
            </View>
          ))}
        </View>

        {/* Recent Activities */}
        <View style={styles.card}>
          <View style={styles.activityHeader}>
            <Text style={styles.cardTitle}>‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î</Text>
            <Text style={styles.activitySubtitle}>üïí 7 ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô‡∏°‡∏≤</Text>
          </View>
          
          {activities.map((activity, index) => (
            <View key={index} style={styles.activityItem}>
              <View style={styles.activityLeft}>
                <View style={[
                  styles.activityIndicator,
                  activity.points > 0 ? styles.activityPositive : styles.activityNegative
                ]}>
                  <Text style={styles.activityDot}>‚óè</Text>
                </View>
                <Text style={styles.activityDate}>{activity.date}</Text>
              </View>
              
              <View style={styles.activityContent}>
                <Text style={styles.activityAction}>{activity.action}</Text>
                <Text style={[
                  styles.activityStatus,
                  activity.points > 0 ? styles.statusPositive : styles.statusNegative
                ]}>
                  {activity.status}
                </Text>
                <View style={styles.impactBadges}>
                  {activity.impact === 'trust' && (
                    <View style={styles.impactBadge}>
                      <Text style={styles.impactText}>Trust</Text>
                    </View>
                  )}
                  {activity.impact === 'irs' && (
                    <View style={[styles.impactBadge, styles.irsBadge]}>
                      <Text style={styles.impactText}>IRS</Text>
                    </View>
                  )}
                  {activity.impact === 'both' && (
                    <>
                      <View style={styles.impactBadge}>
                        <Text style={styles.impactText}>Trust</Text>
                      </View>
                      <View style={[styles.impactBadge, styles.irsBadge]}>
                        <Text style={styles.impactText}>IRS</Text>
                      </View>
                    </>
                  )}
                </View>
              </View>
              
              <View style={styles.activityRight}>
                <Text style={[
                  styles.activityPoints,
                  activity.points > 0 ? styles.pointsPositive : styles.pointsNegative
                ]}>
                  {activity.points > 0 ? `+${activity.points}` : activity.points}
                </Text>
              </View>
            </View>
          ))}

          <TouchableOpacity style={styles.viewAllButton}>
            <Text style={styles.viewAllText}>‡∏î‡∏π‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</Text>
          </TouchableOpacity>
        </View>

        {/* Improvement Tips */}
        <View style={styles.tipsCard}>
          <Text style={styles.tipsTitle}>üéØ ‡∏ß‡∏¥‡∏ò‡∏µ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô</Text>
          <View style={styles.tipsList}>
            <View style={styles.tipItem}>
              <Text style={styles.tipText}>‚Ä¢ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô</Text>
              <Text style={styles.tipImpact}>+5 IRS, +2 Trust</Text>
            </View>
            <View style={styles.tipItem}>
              <Text style={styles.tipText}>‚Ä¢ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÅ‡∏û‡∏•‡∏ï‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÉ‡∏´‡∏°‡πà</Text>
              <Text style={styles.tipImpact}>+10 Trust</Text>
            </View>
            <View style={styles.tipItem}>
              <Text style={styles.tipText}>‚Ä¢ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß</Text>
              <Text style={styles.tipImpact}>+15 Trust, +8 IRS</Text>
            </View>
            <View style={styles.tipItem}>
              <Text style={styles.tipText}>‚Ä¢ ‡∏ä‡∏≥‡∏£‡∏∞‡∏´‡∏ô‡∏µ‡πâ‡∏ï‡∏£‡∏á‡πÄ‡∏ß‡∏•‡∏≤ 7 ‡∏ß‡∏±‡∏ô‡∏ï‡∏¥‡∏î</Text>
              <Text style={styles.tipImpact}>+20 Trust, +12 IRS</Text>
            </View>
          </View>
        </View>

        <View style={{ height: 20 }} />
      </ScrollView>
    </View>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#f5f6fa',
  },
  headerSection: {
    backgroundColor: '#fff',
    padding: 24,
    paddingTop: 50,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.05,
    shadowRadius: 8,
    elevation: 3,
  },
  header: {
    fontSize: 24,
    fontWeight: 'bold',
    color: '#ff6600',
    textAlign: 'center',
    marginBottom: 8,
  },
  subtitle: {
    fontSize: 16,
    color: '#666',
    textAlign: 'center',
  },
  scrollView: {
    flex: 1,
    padding: 16,
  },
  overviewCard: {
    backgroundColor: '#fff',
    borderRadius: 16,
    padding: 24,
    marginBottom: 16,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 4 },
    shadowOpacity: 0.1,
    shadowRadius: 12,
    elevation: 5,
  },
  overviewTitle: {
    fontSize: 22,
    fontWeight: 'bold',
    color: '#333',
    marginBottom: 20,
    textAlign: 'center',
  },
  scoresContainer: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    marginBottom: 20,
  },
  scoreItem: {
    flex: 1,
    alignItems: 'center',
    paddingHorizontal: 8,
  },
  scoreHeader: {
    alignItems: 'center',
    marginBottom: 12,
  },
  scoreLabel: {
    fontSize: 14,
    fontWeight: '600',
    color: '#333',
    marginBottom: 8,
  },
  levelBadge: {
    paddingHorizontal: 8,
    paddingVertical: 4,
    borderRadius: 12,
  },
  levelText: {
    fontSize: 12,
    fontWeight: 'bold',
  },
  mainScore: {
    fontSize: 36,
    fontWeight: 'bold',
    color: '#ff6600',
    marginBottom: 4,
  },
  scoreSubtext: {
    fontSize: 12,
    color: '#666',
    marginBottom: 12,
  },
  progressContainer: {
    flexDirection: 'row',
    alignItems: 'center',
    width: '100%',
  },
  progressBar: {
    flex: 1,
    height: 8,
    backgroundColor: '#e0e0e0',
    borderRadius: 4,
    marginRight: 8,
  },
  progressFill: {
    height: 8,
    borderRadius: 4,
  },
  progressText: {
    fontSize: 12,
    fontWeight: 'bold',
    color: '#666',
    minWidth: 30,
  },
  relationshipInfo: {
    backgroundColor: '#f8f9fa',
    padding: 16,
    borderRadius: 12,
    marginTop: 16,
  },
  relationshipTitle: {
    fontSize: 16,
    fontWeight: 'bold',
    color: '#333',
    marginBottom: 8,
  },
  relationshipText: {
    fontSize: 14,
    color: '#666',
    lineHeight: 20,
  },
  card: {
    backgroundColor: '#fff',
    borderRadius: 16,
    padding: 20,
    marginBottom: 16,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.05,
    shadowRadius: 8,
    elevation: 3,
  },
  cardTitle: {
    fontSize: 20,
    fontWeight: 'bold',
    color: '#333',
    marginBottom: 4,
  },
  cardSubtitle: {
    fontSize: 14,
    color: '#666',
    marginBottom: 16,
  },
  breakdownItem: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    paddingVertical: 12,
    borderBottomWidth: 1,
    borderBottomColor: '#f0f0f0',
  },
  breakdownLeft: {
    flex: 1,
  },
  breakdownCategory: {
    fontSize: 16,
    fontWeight: '500',
    color: '#333',
    marginBottom: 4,
  },
  breakdownSource: {
    fontSize: 12,
    color: '#999',
  },
  breakdownRight: {
    flexDirection: 'row',
    alignItems: 'center',
  },
  breakdownPoints: {
    fontSize: 18,
    fontWeight: 'bold',
  },
  breakdownMax: {
    fontSize: 14,
    color: '#999',
    marginLeft: 2,
  },
  totalRow: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    paddingTop: 16,
    marginTop: 8,
    borderTopWidth: 2,
    borderTopColor: '#ff6600',
  },
  totalLabel: {
    fontSize: 18,
    fontWeight: 'bold',
    color: '#333',
  },
  totalValue: {
    fontSize: 20,
    fontWeight: 'bold',
    color: '#ff6600',
  },
  statsContainer: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    marginBottom: 16,
  },
  statCard: {
    flex: 1,
    backgroundColor: '#fff',
    borderRadius: 12,
    padding: 16,
    alignItems: 'center',
    marginHorizontal: 4,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.05,
    shadowRadius: 8,
    elevation: 3,
  },
  statNumber: {
    fontSize: 24,
    fontWeight: 'bold',
    color: '#ff6600',
    marginBottom: 4,
  },
  statLabel: {
    fontSize: 12,
    color: '#666',
    textAlign: 'center',
  },
  achievementItem: {
    flexDirection: 'row',
    alignItems: 'center',
    paddingVertical: 12,
    borderBottomWidth: 1,
    borderBottomColor: '#f0f0f0',
  },
  achievementIcon: {
    width: 48,
    height: 48,
    borderRadius: 24,
    justifyContent: 'center',
    alignItems: 'center',
    marginRight: 16,
  },
  achievementEarned: {
    backgroundColor: '#fff5f0',
    borderWidth: 2,
    borderColor: '#ff6600',
  },
  achievementLocked: {
    backgroundColor: '#f5f5f5',
    borderWidth: 2,
    borderColor: '#e0e0e0',
  },
  achievementEmoji: {
    fontSize: 24,
  },
  achievementContent: {
    flex: 1,
  },
  achievementTitle: {
    fontSize: 16,
    fontWeight: 'bold',
    color: '#333',
    marginBottom: 4,
  },
  achievementTitleLocked: {
    color: '#999',
  },
  achievementDesc: {
    fontSize: 14,
    color: '#666',
  },
  achievementPoints: {
    backgroundColor: '#4CAF50',
    paddingHorizontal: 8,
    paddingVertical: 4,
    borderRadius: 12,
  },
  pointsText: {
    color: '#fff',
    fontSize: 12,
    fontWeight: 'bold',
  },
  activityHeader: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    marginBottom: 16,
  },
  activitySubtitle: {
    fontSize: 14,
    color: '#666',
  },
  activityItem: {
    flexDirection: 'row',
    alignItems: 'center',
    paddingVertical: 12,
    borderBottomWidth: 1,
    borderBottomColor: '#f0f0f0',
  },
  activityLeft: {
    flexDirection: 'row',
    alignItems: 'center',
    width: 80,
  },
  activityIndicator: {
    width: 12,
    height: 12,
    borderRadius: 6,
    marginRight: 8,
    justifyContent: 'center',
    alignItems: 'center',
  },
  activityPositive: {
    backgroundColor: '#4CAF50',
  },
  activityNegative: {
    backgroundColor: '#f44336',
  },
  activityDot: {
    fontSize: 8,
    color: '#fff',
  },
  activityDate: {
    fontSize: 12,
    fontWeight: 'bold',
    color: '#333',
  },
  activityContent: {
    flex: 1,
    marginLeft: 12,
  },
  activityAction: {
    fontSize: 14,
    color: '#333',
    marginBottom: 2,
  },
  activityStatus: {
    fontSize: 12,
    marginBottom: 4,
  },
  statusPositive: {
    color: '#4CAF50',
  },
  statusNegative: {
    color: '#f44336',
  },
  impactBadges: {
    flexDirection: 'row',
    gap: 4,
  },
  impactBadge: {
    backgroundColor: '#ff6600',
    paddingHorizontal: 6,
    paddingVertical: 2,
    borderRadius: 8,
  },
  irsBadge: {
    backgroundColor: '#9C27B0',
  },
  impactText: {
    color: '#fff',
    fontSize: 10,
    fontWeight: 'bold',
  },
  activityRight: {
    alignItems: 'flex-end',
    minWidth: 40,
  },
  activityPoints: {
    fontSize: 16,
    fontWeight: 'bold',
  },
  pointsPositive: {
    color: '#4CAF50',
  },
  pointsNegative: {
    color: '#f44336',
  },
  viewAllButton: {
    alignItems: 'center',
    paddingVertical: 12,
    marginTop: 8,
  },
  viewAllText: {
    fontSize: 14,
    color: '#ff6600',
    fontWeight: 'bold',
  },
  tipsCard: {
    backgroundColor: '#fff5f0',
    borderRadius: 16,
    padding: 20,
    borderLeftWidth: 4,
    borderLeftColor: '#ff6600',
  },
  tipsTitle: {
    fontSize: 18,
    fontWeight: 'bold',
    color: '#333',
    marginBottom: 16,
  },
  tipsList: {
    marginLeft: 8,
  },
  tipItem: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    marginBottom: 12,
  },
  tipText: {
    fontSize: 14,
    color: '#666',
    flex: 1,
  },
  tipImpact: {
    fontSize: 12,
    color: '#ff6600',
    fontWeight: 'bold',
    backgroundColor: '#fff',
    paddingHorizontal: 8,
    paddingVertical: 4,
    borderRadius: 8,
  },
});
